//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPFClient.FlightTickets {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FlightTickets.IFlightTickets")]
    public interface IFlightTickets {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightTickets/GetClientID", ReplyAction="http://tempuri.org/IFlightTickets/GetClientIDResponse")]
        int GetClientID(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightTickets/GetClientID", ReplyAction="http://tempuri.org/IFlightTickets/GetClientIDResponse")]
        System.Threading.Tasks.Task<int> GetClientIDAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightTickets/GetFlights", ReplyAction="http://tempuri.org/IFlightTickets/GetFlightsResponse")]
        System.Collections.ObjectModel.ObservableCollection<Entities.Models.Flight> GetFlights(Entities.Models.Enums.CityEnum cityFrom, Entities.Models.Enums.CityEnum cityTo, System.DateTime departureTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightTickets/GetFlights", ReplyAction="http://tempuri.org/IFlightTickets/GetFlightsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Entities.Models.Flight>> GetFlightsAsync(Entities.Models.Enums.CityEnum cityFrom, Entities.Models.Enums.CityEnum cityTo, System.DateTime departureTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightTickets/GetReservations", ReplyAction="http://tempuri.org/IFlightTickets/GetReservationsResponse")]
        System.Collections.ObjectModel.ObservableCollection<Entities.Models.ReservationSimple> GetReservations(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightTickets/GetReservations", ReplyAction="http://tempuri.org/IFlightTickets/GetReservationsResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Entities.Models.ReservationSimple>> GetReservationsAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightTickets/SetReservation", ReplyAction="http://tempuri.org/IFlightTickets/SetReservationResponse")]
        int SetReservation(Entities.Models.Flight flight, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightTickets/SetReservation", ReplyAction="http://tempuri.org/IFlightTickets/SetReservationResponse")]
        System.Threading.Tasks.Task<int> SetReservationAsync(Entities.Models.Flight flight, int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightTickets/DeleteReservation", ReplyAction="http://tempuri.org/IFlightTickets/DeleteReservationResponse")]
        void DeleteReservation(int ReservationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightTickets/DeleteReservation", ReplyAction="http://tempuri.org/IFlightTickets/DeleteReservationResponse")]
        System.Threading.Tasks.Task DeleteReservationAsync(int ReservationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightTickets/GetReservationFile", ReplyAction="http://tempuri.org/IFlightTickets/GetReservationFileResponse")]
        byte[] GetReservationFile(int ReservationID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFlightTickets/GetReservationFile", ReplyAction="http://tempuri.org/IFlightTickets/GetReservationFileResponse")]
        System.Threading.Tasks.Task<byte[]> GetReservationFileAsync(int ReservationID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFlightTicketsChannel : WPFClient.FlightTickets.IFlightTickets, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FlightTicketsClient : System.ServiceModel.ClientBase<WPFClient.FlightTickets.IFlightTickets>, WPFClient.FlightTickets.IFlightTickets {
        
        public FlightTicketsClient() {
        }
        
        public FlightTicketsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FlightTicketsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightTicketsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FlightTicketsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetClientID(string login, string password) {
            return base.Channel.GetClientID(login, password);
        }
        
        public System.Threading.Tasks.Task<int> GetClientIDAsync(string login, string password) {
            return base.Channel.GetClientIDAsync(login, password);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Entities.Models.Flight> GetFlights(Entities.Models.Enums.CityEnum cityFrom, Entities.Models.Enums.CityEnum cityTo, System.DateTime departureTime) {
            return base.Channel.GetFlights(cityFrom, cityTo, departureTime);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Entities.Models.Flight>> GetFlightsAsync(Entities.Models.Enums.CityEnum cityFrom, Entities.Models.Enums.CityEnum cityTo, System.DateTime departureTime) {
            return base.Channel.GetFlightsAsync(cityFrom, cityTo, departureTime);
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Entities.Models.ReservationSimple> GetReservations(int userID) {
            return base.Channel.GetReservations(userID);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<Entities.Models.ReservationSimple>> GetReservationsAsync(int userID) {
            return base.Channel.GetReservationsAsync(userID);
        }
        
        public int SetReservation(Entities.Models.Flight flight, int userID) {
            return base.Channel.SetReservation(flight, userID);
        }
        
        public System.Threading.Tasks.Task<int> SetReservationAsync(Entities.Models.Flight flight, int userID) {
            return base.Channel.SetReservationAsync(flight, userID);
        }
        
        public void DeleteReservation(int ReservationID) {
            base.Channel.DeleteReservation(ReservationID);
        }
        
        public System.Threading.Tasks.Task DeleteReservationAsync(int ReservationID) {
            return base.Channel.DeleteReservationAsync(ReservationID);
        }
        
        public byte[] GetReservationFile(int ReservationID) {
            return base.Channel.GetReservationFile(ReservationID);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetReservationFileAsync(int ReservationID) {
            return base.Channel.GetReservationFileAsync(ReservationID);
        }
    }
}
